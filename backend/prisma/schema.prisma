// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(uuid()) @db.Uuid
  email      String       @unique
  name       String
  avatar     String?
  password   String
  createdAt  DateTime     @default(now()) @db.Timestamp(6)
  updatedAt  DateTime     @updatedAt
  Messages   Messages[]
  Rooms      Rooms[]
  RoomsUsers RoomsUsers[]

  @@map("users")
}

model Rooms {
  id          String       @id @default(uuid()) @db.Uuid
  name        String
  description String?
  createdAt   DateTime     @default(now()) @db.Timestamp(6)
  updatedAt   DateTime     @updatedAt
  owner       User         @relation(fields: [ownerId], references: [id])
  ownerId     String       @db.Uuid
  Messages    Messages[]
  RoomsUsers  RoomsUsers[]

  @@map("rooms")
}

model Messages {
  id        String   @id @default(uuid()) @db.Uuid
  content   String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  room      Rooms    @relation(fields: [roomsId], references: [id])
  roomsId   String   @db.Uuid

  @@map("messages")
}

model RoomsUsers {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  room      Rooms    @relation(fields: [roomsId], references: [id])
  roomsId   String   @db.Uuid

  @@map("rooms_users")
}
